name: Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  result_build:
    name: Build Every Application and Push to DockerHub with Version Tags.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: DockerHub Login
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

        # Result Docker

      - name: Build Result Docker Image With Version
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/result:${{ env.RELEASE_VERSION }} -t ${{ secrets.DOCKERHUB_USERNAME }}/result:latest  ./result
      - name: Push Result to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/result

        # Vote Docker

      - name: Build Vote Docker Image With Version
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote:${{ env.RELEASE_VERSION }} -t ${{ secrets.DOCKERHUB_USERNAME }}/vote:latest ./vote
      - name: Push Vote to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote
     
        # Worker Docker
     
      - name: Build Worker Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:${{ env.RELEASE_VERSION }} -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest ./worker
      - name: Push Worker to Docker Hub With Version
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker

  deployResult:
      name: Deploy Result in Heroku
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Login to Heroku Container registry
          env: 
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:login 

        - name: Setting Vars
          env: 
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: |
            heroku config:set POST_URI=${{ secrets.POSTGRES_URI }} -a tp-result

        - name: Build and Push
          env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: |
            cd ./result
            heroku container:push -a tp-result web

        - name: Release
          env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:release -a tp-result web 


  deployVote:
    name: Deploy Vote in Heroku
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login 

      - name: Setting Vars
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku config:set REDIS_PORT=${{ secrets.REDIS_PORT }} -a tp-vote
          heroku config:set REDIS_HOST=${{ secrets.REDIS_HOST }} -a tp-vote
          heroku config:set REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} -a tp-vote

      - name: Build and Push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          cd ./vote
          heroku container:push -a tp-vote web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a tp-vote web 

  deployWorker:
    name: Deploy Worker in Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
          
      - name: Setting Vars
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku config:set POSTGRES_URI=${{ secrets.POSTGRES_URI }} -a tp-worker
          heroku config:set REDIS_PORT=${{ secrets.REDIS_PORT }} -a tp-worker
          heroku config:set REDIS_HOST=${{ secrets.REDIS_HOST }} -a tp-worker
          heroku config:set REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} -a tp-worker
     
      - name: Build and Push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          cd ./worker
          heroku container:push -a tp-worker web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a tp-worker web 

  
